// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  // id type string, i can use => id String @id    (para un uuid for example) 
  id Int @id @default(autoincrement())
  // Soft Delete
  active Boolean
  createdAt DateTime @default(now())
  email String @unique
  name String @db.VarChar(100)
  password String
  subscription Subscription?
  // one to many
  folders Folder[]
  files File[]
}

model Folder{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  folderName String //Google cloud name
  originalName String
  parentFolderId Int?
  user User @relation(fields: [userId],references: [id])
  userId Int
  parentFolder Folder? @relation("FolderSubFolder",fields: [parentFolderId],references: [id])
  childFolders Folder[] @relation("FolderSubFolder")
  files File[]
}

model File{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  fileName String @unique //Google cloud name
  folderId Int?
  originalName String
  folder Folder? @relation(fields: [folderId],references: [id])
  user User @relation(fields: [userId],references: [id])
  userId Int
}

// implement subscriptions

model Subscription{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  type SubscriptionType @default(FREE)
  // cosas extras que podría almacenar serían cosas como el id de la subscripción, fechas de pago, que me daría la tecnología para implementar esta funcionalidad.
  user User @relation(fields: [userId], references: [id])
  userId Int
}

enum SubscriptionType{
  FREE
  PREMIUM
  ENTERPRISE
}